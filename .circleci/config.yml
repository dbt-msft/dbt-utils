
version: 2.1

orbs:
  azure-cli: circleci/azure-cli@1.1.0

jobs:
  
  integration-dbt-utils-azuresql:
    docker:
      - image: dbtmsft/msodbc_py:0.5
    steps:
      - checkout
      - azure-cli/install
      - azure-cli/login-with-service-principal: &azure-creds
          azure-sp: DBT_AZURE_SP_NAME
          azure-sp-password: DBT_AZURE_SP_SECRET
          azure-sp-tenant: DBT_AZURE_TENANT
      - run: &pull-submodules
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote

      - run: &setup-dbt
          name: "Setup dbt"
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip setuptools
            pip install dbt-synapse
            mkdir -p ~/.dbt
            cp integration_tests/ci/sample.profiles.yml ~/.dbt/profiles.yml
      
      - run:
          name: "Run Tests - dbt-utils"
          # TODO re-implement dbt-utils's data tests
          command: |
            . venv/bin/activate
            cd integration_tests/dbt_utils
            dbt deps --target azuresql
            dbt seed --target azuresql --full-refresh
            dbt run --target azuresql --full-refresh
            dbt test --target azuresql

      - store_artifacts:
          path: ./logs

  integration-dbt-expectations-azuresql:
    docker:
      - image: dbtmsft/msodbc_py:0.5
    steps:
      - checkout
      - azure-cli/install
      - azure-cli/login-with-service-principal: *azure-creds
      - run: *pull-submodules
      - run: *setup-dbt
      - run:
          name: "Run Tests - dbt-expectations"
          # TODO port core dbt-expectations test logic
          # TODO re-implement dbt-utils's data tests
          command: |
            . venv/bin/activate
            cd integration_tests/dbt_expectations
            dbt deps --target azuresql
            dbt run --target azuresql --full-refresh
            # dbt test --target azuresql
      - store_artifacts:
          path: /root/project/integration_tests/dbt_expectations/logs/dbt.log
      - store_artifacts:
          path: /root/project/integration_tests/dbt_expectations/target

  integration-dbt-date-azuresql:
    docker:
      - image: dbtmsft/msodbc_py:0.5
    steps:
      - checkout
      - azure-cli/install
      - azure-cli/login-with-service-principal: *azure-creds
      - run: *pull-submodules
      - run: *setup-dbt
      - run:
          name: "Run Tests - dbt-date"
          command: |
            . venv/bin/activate
            cd integration_tests/dbt_date
            dbt deps --target azuresql
            dbt run --target azuresql --full-refresh
            dbt test --target azuresql
      - store_artifacts:
          path: /root/project/integration_tests/dbt_date/logs/dbt.log
      - store_artifacts:
          path: /root/project/integration_tests/dbt_date/target

  integration-dbt-utils-synapse:
    docker:
      - image: dbtmsft/msodbc_py:0.5
    steps:
      - checkout
      - run: *pull-submodules
      - azure-cli/install
      - azure-cli/login-with-service-principal: *azure-creds
      - run: *setup-dbt
      - run: &start-synapse
          name: resume Synapse pool/db
          command: az synapse sql pool resume --name $DBT_SYNAPSE_DB --workspace-name $DBT_SYNAPSE_SERVER --resource-group dbt-msft
      - run:
          name: "Run Tests - dbt-utils"
          # TODO: data test is faailing
          # assert_get_query_results_as_dict_objects_equal
          command: |
            . venv/bin/activate
            cd integration_tests/dbt_utils
            dbt deps --target synapse
            dbt seed --target synapse --full-refresh
            dbt run --target synapse --full-refresh
            dbt test --target synapse --schema
      - run: &pause-synapse
          name: pause Synapse pool/db
          command: az synapse sql pool resume --name $DBT_SYNAPSE_DB --workspace-name $DBT_SYNAPSE_SERVER --resource-group dbt-msft
          when: always
      - store_artifacts:
          path: ./logs

  integration-dbt-expectations-synapse:
    docker:
      - image: dbtmsft/msodbc_py:0.5
    steps:
      - checkout
      - run: *pull-submodules
      - azure-cli/install
      - azure-cli/login-with-service-principal: *azure-creds
      - run: *setup-dbt
      - run: *start-synapse
      - run:
          # TODO port core dbt-expectations test logic
          name: "Run Tests - dbt-expectations"
          command: |
            . venv/bin/activate
            cd integration_tests/dbt_expectations
            dbt deps --target synapse
            dbt run --target synapse --full-refresh
            # dbt test --target synapse
      - run: *pause-synapse
      - store_artifacts:
          path: ./logs

  integration-dbt-date-synapse:
    docker:
      - image: dbtmsft/msodbc_py:0.5
    steps:
      - checkout
      - run: *pull-submodules
      - azure-cli/install
      - azure-cli/login-with-service-principal: *azure-creds
      - run: *setup-dbt
      - run: *start-synapse
      - run:
          name: "Run Tests - dbt-date"
          command: |
            . venv/bin/activate
            cd integration_tests/dbt_date
            dbt deps --target synapse
            dbt run --target synapse --full-refresh
            dbt test --target synapse
      - run: *pause-synapse
      - store_artifacts:
          path: ./logs


workflows:
  version: 2
  test-all:
    jobs:
      - integration-dbt-utils-azuresql: &dbt-context
          context: DBT_SYNAPSE_PROFILE
      - integration-dbt-utils-synapse: *dbt-context
      - integration-dbt-expectations-azuresql: *dbt-context
      - integration-dbt-expectations-synapse: *dbt-context
      - integration-dbt-date-azuresql: *dbt-context
      - integration-dbt-date-synapse: *dbt-context
